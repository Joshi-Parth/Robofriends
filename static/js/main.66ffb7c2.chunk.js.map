{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","onSearchChange","event","setState","searchField","target","value","state","fetch","then","response","json","users","filteredRobots","this","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"6MAgBeA,EAbF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GACzB,OACI,sBAAKC,UAAU,uCAAf,UACI,qBAAKC,IAAI,SAAUC,IAAG,+BAA0BH,EAA1B,aACtB,gCACI,+BAAKF,EAAL,OACA,4BAAIC,WCeLK,EAlBE,SAAC,GAAiB,IAAfC,EAAc,EAAdA,OAChB,OACI,8BACCA,EAAOC,KAAI,SAACC,EAAKC,GACd,OACI,cAAC,EAAD,CAEAR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCINC,EAdG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACjB,OACI,qBAAKT,UAAU,MAAf,SACI,uBACIA,UAAU,mCACVU,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCEXI,EATA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACKJ,EAAMK,YCsCJC,E,kDApCX,aAAc,IAAD,8BACT,gBAaJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAb1C,EAAKC,MAAO,CACRvB,OAAQ,GACRoB,YAAa,IAJR,E,qDAQb,WAAqB,IAAD,OAChBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAU,EAAKT,SAAS,CAACnB,OAAQ4B,S,oBAO3C,WAAS,IAAD,OACEC,EAAiBC,KAAKP,MAAMvB,OAAO+B,QAAO,SAAA/B,GAC5C,OAAOA,EAAOP,KAAKuC,cAAcC,SAAS,EAAKV,MAAMH,YAAYY,kBAGzE,OACI,sBAAKpC,UAAU,KAAf,UACI,oBAAIA,UAAU,cAAd,yBACA,cAAC,EAAD,CAAWS,aAAcyB,KAAKb,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,CAAUjB,OAAQ6B,a,GA7BhBK,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACG,8BACE,cAAC,EAAD,MAEbC,SAASC,eAAe,SAMzBX,M","file":"static/js/main.66ffb7c2.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst Card = ({ name, email, id }) => {\r\n    return (\r\n        <div className='tc dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt=\"robots\"  src={`https://robohash.org/${id}200x200`}/>\r\n            <div>\r\n                <h2>{name} </h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n \r\n\r\n\r\n\r\nconst CardList = ({ robots, }) => {\r\n    return (\r\n        <div>\r\n        {robots.map((user,i) => {\r\n            return (\r\n                <Card \r\n                key={i}  \r\n                id={robots[i].id} \r\n                name={robots[i].name} \r\n                email={robots[i].email} />\r\n            );\r\n    })}\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default CardList;  ","import React from 'react';\r\n\r\nconst SearchBox = ({ searchChange }) => {\r\n    return (\r\n        <div className='pa2'>\r\n            <input \r\n                className='pa3 ba b--green bg-lightest-blue'\r\n                type='search' \r\n                placeholder='Search robots' \r\n                onChange={searchChange}\r\n                />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{overflowY: 'scroll', border: '5px solid black', height: '800px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll'\r\n\r\n\r\nclass App extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state ={\r\n            robots: [],\r\n            searchField: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount (){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response => response.json())\r\n        .then(users => {this.setState({robots: users})});\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({ searchField: event.target.value })\r\n    }\r\n\r\n    render(){\r\n        const filteredRobots = this.state.robots.filter(robots =>{\r\n            return robots.name.toLowerCase().includes(this.state.searchField.toLowerCase())\r\n        })\r\n\r\n    return (\r\n        <div className='tc'>\r\n            <h1 className=\"f1 lh-solid\">RoboFriends</h1>\r\n            <SearchBox searchChange={this.onSearchChange} />\r\n            <Scroll>\r\n                <CardList robots={filteredRobots}/>\r\n            </Scroll>\r\n        </div>\r\n        \r\n    );\r\n}\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App'\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n            <div>\n              <App/>\n            </div>\n,document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}